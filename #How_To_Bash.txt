# Commands mostly tested on Kali Linux

# Start every Bash Script with a "She-bang bin bash" this will tell linux this is a bash script
#!/bin/bash



############################################################
# Testing if a program is installed on an operating system #
############################################################

which curl > /dev/null 2>&1 || {echo "Curl is not installed" >&2; return 1; }

1st - "which curl" - Checks for Curl in the linux programs
2nd - " > /dev/null 2>&1" - outputs all errors and responses off screen to the /dev/null black hole
3rd - " || " - OR command in Bash
4th - " {echo "Curl is not installed >&2; return 1; } - Echos Text to screen if error is detected, if no error appears it will simply proceed with a blank return

Conclusion: This line can be used to check for if a dependancy is installed and can be used to install it if it is found missing.
Other Use Cases:
which curl > /dev/null 2>&1 || {echo "apt install curl -y" >&2; return 1; }    # Installs curl if it is not already installed
curl github.com > /dev/null 2>&1 || {echo "Error: no internet connection" >&2; return 1; }    # Uses curl to check the status of the internet connection
ping github.com -c 2 > /dev/null 2>&1 || {echo "Error: no internet connection" >&2; return 1; }    # Uses ping to determine the status of the internet connection


#########################
# Command return status #
#########################

which curl ; echo $?        # Returns "0" which is a successful output
which curle ; echo $?       # Returns "1" which is a failed last command
ping google.com ; echo $?   # Returns "0" if connected and "1" if not connected

##############################################
# Grabbing user flags at startup of a script #
##############################################

declare -a flags=(--help -a -g -h -f -g -I)         # Declares flags you can define (-e didn't work for some reason)

if [[ $@ == '--help' ]] || [[ $@ == '' ]]; then     # If the users selects '--help' or nothing then     
for flag in "${flags[@]}"; do                       # each item in the array declared by "flags" is listed
	echo $flag
done
else
	echo $@                                           # If a specific flag was picked that flag is echoed but a command could be run
fi


################################
# Run a command or exit script #
################################

apt install upgrade -y || exit 1          # Attempts to run the command and if it fails it exits the script


##########################
# Sleep Commands in Bash #
##########################

sleep .5      # Sleeps for half of a second (seconds are default)
sleep 1       # sleeps for 1 second
sleep 1s      # sleeps for 1 second
sleep 1m      # sleeps for 1 minute
sleep 1h      # sleeps for 1 hour
sleep 1d      # sleeps for 1 day


####################################################
# Echo words directly to the previous line of text #
####################################################

echo -n "8==>"     # Outputs regular text
sleep 1s
echo -n "..-"      # Outputs this directly after the previous text on the same line

echo -n "."    # Outputs a single period
sleep 1
echo -n "."    # After a second it outputs another period next to the first
sleep 1
echo -n "."    # Drops a third period after the second one making a loading effect




########################################
# Multiple operations in the same line #
########################################

echo "$(( n=10, n=n+30 ))"        # Outputs 40



##############################
# Colors in bash font output #
##############################

'\e[background;Format;Textm'

echo "\e[41;4;30m test \e[0m"     # Prints "test" in black font on a red background

red=$'\e[0;31m'
green_underlined=$'\e[4;32m'
yellow_bold=$'\e[1;33m'
black_on_cyan=$'\e[46;1;30m'
no_color=$'\e[0m'

Text Format:         Foreground Text Color:      Background Color:
0 - Normal Text      30: Black                   40: Black
1 - Bold             31: Red			 41: Red
4 - Underlined       32: Green 			 42: Green
                     33: Yellow                  43: Yellow
		     34: Blue                    44: Blue
		     35: Purple                  45: Purple
		     36: Cyan                    46: Cyan
		     37: White                   47: White
		     
		    
