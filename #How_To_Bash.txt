# Commands mostly tested on Kali Linux

# Start every Bash Script with a "She-bang bin bash" this will tell linux this is a bash script
#!/bin/bash



############################################################
# Testing if a program is installed on an operating system #
############################################################

which curl > /dev/null 2>&1 || {echo "Curl is not installed" >&2; return 1; }

1st - "which curl" - Checks for Curl in the linux programs
2nd - " > /dev/null 2>&1" - outputs all errors and responses off screen to the /dev/null black hole
3rd - " || " - OR command in Bash
4th - " {echo "Curl is not installed >&2; return 1; } - Echos Text to screen if error is detected, if no error appears it will simply proceed with a blank return

Conclusion: This line can be used to check for if a dependancy is installed and can be used to install it if it is found missing.
Other Use Cases:
which curl > /dev/null 2>&1 || {echo "apt install curl -y" >&2; return 1; }    # Installs curl if it is not already installed
curl github.com > /dev/null 2>&1 || {echo "Error: no internet connection" >&2; return 1; }    # Uses curl to check the status of the internet connection
ping github.com -c 2 > /dev/null 2>&1 || {echo "Error: no internet connection" >&2; return 1; }    # Uses ping to determine the status of the internet connection


#########################
# Command return status #
#########################

which curl ; echo $?        # Returns "0" which is a successful output
which curle ; echo $?       # Returns "1" which is a failed last command
ping google.com ; echo $?   # Returns "0" if connected and "1" if not connected

##############################################
# Grabbing user flags at startup of a script #
##############################################

declare -a flags=(--help -a -g -h -f -g -I)         # Declares flags you can define (-e didn't work for some reason)

if [[ $@ == '--help' ]] || [[ $@ == '' ]]; then     # If the users selects '--help' or nothing then     
for flag in "${flags[@]}"; do                       # each item in the array declared by "flags" is listed
	echo $flag
done
else
	echo $@                                           # If a specific flag was picked that flag is echoed but a command could be run
fi


################################
# Run a command or exit script #
################################

apt install upgrade -y || exit 1          # Attempts to run the command and if it fails it exits the script


##########################
# Sleep Commands in Bash #
##########################

sleep .5      # Sleeps for half of a second (seconds are default)
sleep 1       # sleeps for 1 second
sleep 1s      # sleeps for 1 second
sleep 1m      # sleeps for 1 minute
sleep 1h      # sleeps for 1 hour
sleep 1d      # sleeps for 1 day


####################################################
# Echo words directly to the previous line of text #
####################################################

echo -n "8==>"     # Outputs regular text
sleep 1s
echo -n "..-"      # Outputs this directly after the previous text on the same line

echo -n "."    # Outputs a single period
sleep 1
echo -n "."    # After a second it outputs another period next to the first
sleep 1
echo -n "."    # Drops a third period after the second one making a loading effect




########################################
# Multiple operations in the same line #
########################################

echo "$(( n=10, n=n+30 ))"        # Outputs 40



##############################
# Colors in bash font output #
##############################

'\e[background;Format;Textm'

echo "\e[41;4;30m test \e[0m"     # Prints "test" in black font on a red background

red=$'\e[0;31m'
green_underlined=$'\e[4;32m'
yellow_bold=$'\e[1;33m'
black_on_cyan=$'\e[46;1;30m'
no_color=$'\e[0m'

Text Format:         Foreground Text Color:      Background Color:
0 - Normal Text      30: Black                   40: Black
1 - Bold             31: Red			 41: Red
4 - Underlined       32: Green 			 42: Green
                     33: Yellow                  43: Yellow
		     34: Blue                    44: Blue
		     35: Purple                  45: Purple
		     36: Cyan                    46: Cyan
		     37: White                   47: White
		     
		    

################################
# Incrementing Variable Number #
################################

((num++))      # This will increase the value of ${num} plus 1



########################
# Check if File exists #
########################

if [[ -e filename.ext ]];
  then
    echo "file exists"            # If the requested filename exists then this is run
  else 
    echo "file does not exists"   # If the requested filename does not exist then this is run
fi



################################
# Checking for SUDO Privileges #
################################

if [[ $(id -u) != 0 ]];                   # Checks for root permissions
  then
     echo "This needs to be run as root"  # Tells user to runs as root
fi




################
# Ending loops #
################

while read line;
  do
     echo $line
done < $input_file





################
#  SSH CONFIG  #
################


Host bastion
        HostName 199.247.20.143
        User unconventionalderby
        Port 22
        IdentityFile ~/.ssh/id_rsa
	
Host mntn-out
        HostName 10.99.2.17
        User unconventionalderby
        Port 22
        ProxyJump bastion
        IdentityFile ~/.ssh/id_rsa








################
#   IPTABLES   #
################

sudo iptables -t nat -nvL

Chain PREROUTING (policy ACCEPT 300K packets, 15M bytes)
 pkts bytes target     prot opt in     out     source               destination         
  178  7237 DNAT       udp  --  *      *       0.0.0.0/0            12.42.15.22          udp dpt:1194 to:10.100.0.107
 300K   15M LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            LOG flags 0 level 4 prefix "dropped pre: "

Chain INPUT (policy ACCEPT 7102 packets, 539K bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 72990 packets, 4776K bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain POSTROUTING (policy ACCEPT 72990 packets, 4776K bytes)
 pkts bytes target     prot opt in     out     source               destination         
  178  7237 MASQUERADE  udp  --  *      eth1    0.0.0.0/0            0.0.0.0/0            udp dpt:1194

Chain LOGGING (0 references)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            limit: avg 1/sec burst 5 LOG flags 0 level 4 prefix "IPTables-Denied: "
    
 
sudo iptables -nvL

    Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
 205K  875M ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED
 7195  556K ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0           
    3   180 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           
    6   360 ACCEPT     tcp  --  eth1   *       0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:22
 291K   14M LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            limit: avg 1/sec burst 5 LOG flags 0 level 4 prefix "IPTables-Denied-INPUT: "
 296K   15M REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
  178  7237 ACCEPT     udp  --  eth0   eth1    0.0.0.0/0            0.0.0.0/0            udp dpt:1194
    0     0 ACCEPT     all  --  eth1   eth0    0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED
    0     0 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            limit: avg 1/sec burst 5 LOG flags 0 level 4 prefix "IPTables-Denied-FWD: "
    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited

Chain OUTPUT (policy ACCEPT 532K packets, 37M bytes)
 pkts bytes target     prot opt in     out     source               destination         

Chain ICMP_BLOCK (2 references)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 ICMP_BLOCK  icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 17
    0     0 ICMP_BLOCK  icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 18
    0     0 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            limit: avg 5/min burst 40 LOG flags 0 level 4 prefix "ICMP -- Reject -- eth0"
    0     0 DROP       all  --  eth0   *       0.0.0.0/0            0.0.0.0/0           

Chain LOGGING (0 references)
 pkts bytes target     prot opt in     out     source               destination         

Chain PORT-SCAN-BLOCK (0 references)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 RETURN     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp flags:0x17/0x04 limit: avg 1/sec burst 5
    0     0 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            limit: avg 1/min burst 5 LOG flags 0 level 4 prefix "iptables PORT-SCAN deny:"
    0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0           
